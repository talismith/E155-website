[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "E155 Blog",
    "section": "",
    "text": "Initial Reflections Post\n\n\nI’m very excited to be taking MicroPs this semester! I wanted to take this class because I really enjoyed E85, particularly the portion where we used the FPGA. I found that the labs were much more interesting than the problem sets, so I’m excited to be taking a course with only labs. Some of my goals would be to become more comfortable using FPGAs, and understanding more thoroughly terminology distinctions (such as microprocessors vs microcontrollers), and become super familiar with git.\n\n\n\n\n\nAug 29, 2025\n\n\nTali Smith\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Me",
    "section": "",
    "text": "Tali Smith is a senior engineering student at Harvey Mudd College. This page documents her work in E155: Microprocessors.\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "labs/labs.html#lab-2-multiplexed-7-segment-display",
    "href": "labs/labs.html#lab-2-multiplexed-7-segment-display",
    "title": "Labs",
    "section": "Lab 2: Multiplexed 7-Segment Display",
    "text": "Lab 2: Multiplexed 7-Segment Display"
  },
  {
    "objectID": "labs/labs.html#lab-3-keypad-scanner",
    "href": "labs/labs.html#lab-3-keypad-scanner",
    "title": "Labs",
    "section": "Lab 3: Keypad Scanner",
    "text": "Lab 3: Keypad Scanner"
  },
  {
    "objectID": "labs/labs.html#lab-4-digital-audio",
    "href": "labs/labs.html#lab-4-digital-audio",
    "title": "Labs",
    "section": "Lab 4: Digital Audio",
    "text": "Lab 4: Digital Audio"
  },
  {
    "objectID": "labs/labs.html#lab-5-interrupts",
    "href": "labs/labs.html#lab-5-interrupts",
    "title": "Labs",
    "section": "Lab 5: Interrupts",
    "text": "Lab 5: Interrupts"
  },
  {
    "objectID": "labs/labs.html#lab-6-the-internet-of-things-and-serial-peripheral-interface",
    "href": "labs/labs.html#lab-6-the-internet-of-things-and-serial-peripheral-interface",
    "title": "Labs",
    "section": "Lab 6: The Internet of Things and Serial Peripheral Interface",
    "text": "Lab 6: The Internet of Things and Serial Peripheral Interface"
  },
  {
    "objectID": "labs/labs.html#lab-7-the-advanced-encryption-standard",
    "href": "labs/labs.html#lab-7-the-advanced-encryption-standard",
    "title": "Labs",
    "section": "Lab 7: The Advanced Encryption Standard",
    "text": "Lab 7: The Advanced Encryption Standard"
  },
  {
    "objectID": "labs/lab1/lab1.html",
    "href": "labs/lab1/lab1.html",
    "title": "Lab 1 Report",
    "section": "",
    "text": "Block Diagram\n Figure 1 shows the overall block diagram of lab 1’s design. The design has two modules, top and determineHex. The inputs to the whole system are s and clk, and the outputs are seg and led.\nSchematic\n The physical layout of the design is shown in Figure 2. The iCE40UP is connected to the 7-segment display using 7 control signals. Due to a shortage of SMT diodes, 3 LEDs were connected externally to the iCE40UP. The LEDs and all 7 segments were also connected to 220 ohm current-limiting resistors.\nResults\nThe design meets all of the requirements. It can accurately depict all of the unique hexadecimal symbols on the 7-segment display, using the 4 switches. Additionally, the 3 external LEDs respond properly to the 4 switches, S0 and S1 create an XOR gate while S2 and S3 create an AND gate. The switches are oriented so that the adjacent switch controls the next bit, meaning the outside switches control the least significant bit and the most signficant bit.\nSo far, including the setup parts of the lab, about 18 hours were spent on this lab. This is the time it took without aiming to meet all “excellence” specifications. Personally, the turn around time from class 1, github + quartus setup, soldering/board setup, and lab 1 was very fast. I thought the actual lab was very interesting and not too complex, but the entire setup of everything was frustratingly long, particularly with missing components. I would recommend having the github, quartus, and soldering due the first week, and then having lab 1 get its own week.\nAI Reflection\n As shown in Figure 3 above, ChatGPT’s solution to the prompt “Write SystemVerilog HDL to leverage the internal high speed oscillator in the Lattice UP5K FPGA and blink an LED at 2 Hz. Take full advantage of SystemVerilog syntax, for example, using logic instead of wire and reg.” synthesized! I was impressed that ChatGPT’s code synthesized first try, my own code did not. Although none of ChatGPT’s code was new to me, it did use a slightly different method to create the counter than I did. There also were no warning or error messages from this code. Although it was a simpler problem than the entire Lab 1, I still consider this result impressive. In the future, if it were allowed, I would likely try to use an LLM for hints when I get stuck. I think getting completely stuck is when the most time is wasted, and getting a slight push or inspiration would probably be helpful (especially when I’m working entirely alone). However, I would not want to rely on an LLM because I think they are generally pretty unreliable, and just because the code synthesized does not guarantee it would correctly solve the problem.\nCode\nIncluded below is my Verilog code.\n// Tali Smith, natasmith@hmc.edu, 9/1/25\n// Lab 1\n// Code for implementing 7-segment display to display all hexadecimal digits using 4 switches.\nmodule top(input logic clk, input logic [3:0] s, output logic [2:0] led, output logic [6:0] seg);\nlogic int_osc;\nlogic pulse;\nlogic led_state = 0;\nlogic [24:0] counter = 0;\n\n// Internal high-speed oscillator\nHSOSC hf_osc (.CLKHFPU(1'b1), .CLKHFEN(1'b1), .CLKHF(int_osc));\n\n// determine the correct segments based on hex represented by switches  \ndetermineHex hex(clk, s, seg);\n\n// control the LEDs using the switches\n// LED[0]\nassign led[0] = s[1] ^ s[0]; // s[1] OR s[0]\n// LED[1]\nassign led[1] = s[3] & s[2]; // s3[3] AND s[2]\n// LED[2]\n// clock divider\nalways_ff @(posedge int_osc)\n    begin\n        if (counter == 25'd10000000 - 1) begin // switch led every 10 mil cycles\n            counter &lt;= 0;\n            led[2] &lt;= ~led[2];\n        end else begin\n            counter &lt;= counter + 1;\n        end\n    end\nendmodule\n// Tali Smith, natasmith@hmc.edu, 9/1/25\n// This module takes in the 4 switches and determines what segments of the 7-segment\n// display should be lit to represent hex value (for common anode display)\nmodule determineHex(input logic clk, input logic [3:0] s, output logic [6:0] seg);\nalways_comb\n    case (s)\n        4'b0000: seg = 7'b1000000; // 0\n        4'b0001: seg = 7'b1111001; // 1\n        4'b0010: seg = 7'b0100100; // 2\n        4'b0011: seg = 7'b0110000; // 3\n        4'b0100: seg = 7'b0011001; // 4\n        4'b0101: seg = 7'b0010010; // 5\n        4'b0110: seg = 7'b0000010; // 6\n        4'b0111: seg = 7'b1111000; // 7\n        4'b1000: seg = 7'b0000000; // 8\n        4'b1001: seg = 7'b0010000; // 9\n        4'b1010: seg = 7'b0001000; // A\n        4'b1011: seg = 7'b0000011; // b\n        4'b1100: seg = 7'b1000110; // C\n        4'b1101: seg = 7'b0100001; // d\n        4'b1110: seg = 7'b0000110; // E\n        4'b1111: seg = 7'b0001110; // F\n        default: seg = 7'b1111111; // off\n    endcase\nendmodule"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "The work on this website is based on the Harvey Mudd College E155 course: https://hmc-e155.github.io/."
  }
]